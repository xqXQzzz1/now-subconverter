common:
  api_mode: false
  api_access_token: password
  default_url: []
  enable_insert: true
  insert_url: []
  prepend_insert_url: true
  exclude_remarks: ["^(‰∏≠ÂõΩ)", "Ââ©‰ΩôÊµÅÈáè", "ËøáÊúüÊó∂Èó¥"]
  include_remarks: []
  enable_filter: false
  filter_script: ""
  default_external_config: "" # config/example_external_config.yml
  # clash_rule_base: base/all_base.tpl
  base_path: base
  clash_rule_base: base/GeneralClashConfig.yml
  surge_rule_base: base/all_base.tpl
  surfboard_rule_base: base/all_base.tpl
  mellow_rule_base: base/all_base.tpl
  quan_rule_base: base/all_base.tpl
  quanx_rule_base: base/all_base.tpl
  loon_rule_base: base/all_base.tpl
  sssub_rule_base: base/all_base.tpl
  proxy_config: SYSTEM
  proxy_ruleset: SYSTEM
  proxy_subscription: SYSTEM
  append_proxy_type: false

userinfo:
  stream_rule:
    - { match: "^Ââ©‰ΩôÊµÅÈáèÔºö(.*?)\\|ÊÄªÊµÅÈáèÔºö(.*)$", replace: "total=$2&left=$1" }
    - { match: "^Ââ©‰ΩôÊµÅÈáèÔºö(.*?) (.*)$", replace: "total=$1&left=$2" }
    - { match: "^Bandwidth: (.*?)/(.*)$", replace: "used=$1&total=$2" }
    - { match: "^.*Ââ©‰Ωô(.*?)(?:\\s*?)@(?:.*)$", replace: "total=$1" }
    - { match: "^.*?ÊµÅÈáè:(.*?) Ââ©:(?:.*)$", replace: "total=$1" }
  time_rule:
    - {
        match: "^ËøáÊúüÊó∂Èó¥Ôºö(\\d+)-(\\d+)-(\\d+) (\\d+):(\\d+):(\\d+)$",
        replace: "$1:$2:$3:$4:$5:$6",
      }
    - {
        match: "^Âà∞ÊúüÊó∂Èó¥(:|Ôºö)(\\d+)-(\\d+)-(\\d+)$",
        replace: "$1:$2:$3:0:0:0",
      }
    - {
        match: "^Smart Access expire: (\\d+)/(\\d+)/(\\d+)$",
        replace: "$1:$2:$3:0:0:0",
      }
    - { match: "^.*?ÊµÅÈáè:(?:.*?) Ââ©:(.*?)Â§©$", replace: "left=$1d" }

node_pref:
  udp_flag: true
  # tcp_fast_open_flag: false
  sort_flag: false
  sort_script: ""
  # skip_cert_verify_flag: false
  filter_deprecated_nodes: false
  append_sub_userinfo: true
  clash_use_new_field_name: true
  # Generate style of the proxies section of Clash subscriptions.
  # Supported styles: block, flow, compact
  # Block: - name: name1    Flow: - {name: name1, key: value}    Compact: [{name: name1, key: value},{name: name2, key: value}]
  #          key: value           - {name: name2, key: value}
  #        - name: name2
  #          key: value
  clash_proxies_style: flow
  rename_node:
    #  - {match: "\\(?((x|X)?(\\d+)(\\.?\\d+)?)((\\s?ÂÄçÁéá?)|(x|X))\\)?", replace: "$1x"}
    - { match: ",", replace: " " }
    - { match: "\t", replace: " " }
    - { import: snippets/acl4ssr_rename_node.txt }

# ;Append a '#!MANAGED-CONFIG' info to Surge configurations
managed_config:
  write_managed_config: true
  # Address prefix for MANAGED-CONFIG info, without the trailing "/".
  # This address will also be used for generating /getruleset, /qx-rewrite, /qx-script addresses.
  managed_config_prefix: "http://127.0.0.1:25500"
  # ;Managed config update interval in seconds, determine how long the config will be updated.
  config_update_interval: 86400
  # ;If config_update_struct is set to true, Surge will require a force update after the interval.
  config_update_strict: false
  # ;Device ID to be written to rewrite scripts for some version of Quantumult X
  quanx_device_id: ""

surge_external_proxy:
  # ;surge_ssr_path=/usr/bin/ssr-local
  surge_ssr_path: "" # /usr/bin/ssr-local
  resolve_hostname: true

emojis:
  add_emoji: true
  remove_old_emoji: true
  rules:
    #  - {match: "(ÊµÅÈáè|Êó∂Èó¥|Â∫îÊÄ•)", emoji: "üè≥Ô∏è‚Äçüåà"}
    - { import: snippets/emoji.txt }

rulesets:
  # Enable generating rules with rulesets
  enabled: true
  # Overwrite the existing rules in rule_base
  overwrite_original_rules: true
  # Perform a ruleset update on request
  update_ruleset_on_request: true
  surge_ruleset:
    - { rule: "GEOIP,CN", group: "DIRECT" }
    #  - {ruleset: "rules/LocalAreaNetwork.list", group: "DIRECT"}
    #  - {ruleset: "surge:rules/LocalAreaNetwork.list", group: "DIRECT"}
    #  - {ruleset: "quanx:https://raw.githubusercontent.com/ConnersHua/Profiles/master/Quantumult/X/Filter/Advertising.list", group: "Advertising"}
    #  - {ruleset: "clash-domain:https://ruleset.dev/clash_domestic_services_domains", group: "Domestic Services"}
    #  - {ruleset: "clash-ipcidr:https://ruleset.dev/clash_domestic_services_ips", group: "Domestic Services"}
    #  - {ruleset: "clash-classic:https://raw.githubusercontent.com/DivineEngine/Profiles/master/Clash/RuleSet/China.yaml", group: "DIRECT"}
    - { import: snippets/acl4ssr_rulesets.txt }

proxy_groups:
  # ;Generate Clash Proxy Group with the following patterns. Node filterting rule supports regular expression.
  # ;Format: Group_Name`select`Rule_1`Rule_2`...
  # ;        Group_Name`url-test|fallback|load-balance`Rule_1`Rule_2`...`test_url`interval[,timeout][,tolerance]
  # ;Rule with "[]" prefix will be added directly.

  # ;custom_proxy_group=Proxy`select`.*`[]AUTO`[]DIRECT`.*
  # ;custom_proxy_group=UrlTest`url-test`.*`http://www.gstatic.com/generate_204`300,5,100
  # ;custom_proxy_group=FallBack`fallback`.*`http://www.gstatic.com/generate_204`300,5
  # ;custom_proxy_group=LoadBalance`load-balance`.*`http://www.gstatic.com/generate_204`300,,100
  # ;custom_proxy_group=SSID`ssid`default_group`celluar=group0,ssid1=group1,ssid2=group2

  # ;custom_proxy_group=g1`select`!!GROUPID=0
  # ;custom_proxy_group=g2`select`!!GROUPID=1
  # ;custom_proxy_group=v2ray`select`!!GROUP=V2RayProvider

  # ;custom_proxy_group=g1hk`select`!!GROUPID=0!!(HGC|HKBN|PCCW|HKT|hk|Ê∏Ø)
  # ;custom_proxy_group=sstw`select`!!GROUP=V2RayProvider!!(Ê∑±Âè∞|ÂΩ∞Âåñ|Êñ∞Âåó|Âè∞|tw)

  # ;for forcerule.yml
  # ;custom_proxy_group=!!import:snippets/groups_forcerule.txt

  # ;for Surge rulesets
  custom_proxy_group:
    #  - {name: UrlTest, type: url-test, rule: [".*"], url: http://www.gstatic.com/generate_204, interval: 300}
    #  - {name: Proxy, type: select, rule: [".*"]}
    #  - {name: group1, type: select, rule: ["!!GROUPID=0"]}
    #  - {name: v2ray, type: select, rule: ["!!GROUP=V2RayProvider"]}
    #  - {import: snippets/groups_forcerule.txt}
    #  - {name: ssid group, type: ssid, rule: ["default_group", "celluar=group0,ssid1=group1,ssid2=group2"]}
    #  - {import: snippets/groups.txt}
    - { import: snippets/acl4ssr_groups.txt }

template:
  template_path: "template"
  globals:
    - { key: clash.http_port, value: 7890 }
    - { key: clash.socks_port, value: 7891 }
    - { key: clash.allow_lan, value: false }
    - { key: clash.log_level, value: info }

aliases:
  - { uri: /v, target: /version }
  - { uri: /clash, target: "/sub?target=clash" }
  - { uri: /clashr, target: "/sub?target=clashr" }
  - { uri: /surge, target: "/sub?target=surge" }
  - { uri: /quan, target: "/sub?target=quan" }
  - { uri: /quanx, target: "/sub?target=quanx" }
  - { uri: /mellow, target: "/sub?target=mellow" }
  - { uri: /surfboard, target: "/sub?target=surfboard" }
  - { uri: /loon, target: "/sub?target=loon" }
  - { uri: /ss, target: "/sub?target=ss" }
  - { uri: /ssd, target: "/sub?target=ssd" }
  - { uri: /sssub, target: "/sub?target=sssub" }
  - { uri: /ssr, target: "/sub?target=ssr" }
  - { uri: /v2ray, target: "/sub?target=v2ray" }
  - { uri: /trojan, target: "/sub?target=trojan" }
server:
  listen: 0.0.0.0
  port: 25500
  serve_file_root: ""

advanced:
  log_level: info
  print_debug_info: false
  max_pending_connections: 10240
  max_concurrent_threads: 2
  max_allowed_rulesets: 0
  max_allowed_rules: 0
  max_allowed_download_size: 0
  enable_cache: false
  cache_subscription: 60
  cache_config: 300
  cache_ruleset: 21600
  async_fetch_ruleset: true
